// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "JoystickDrive.h"
#include "../Subsystems/Drive.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

JoystickDrive::JoystickDrive(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drive.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void JoystickDrive::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void JoystickDrive::Execute() {
	Robot::drive->TankDrive(Robot::oi->GetLJoystick(), Robot::oi->GetRJoystick());
	frc::SmartDashboard::PutNumber("rEnc", RobotMap::driverEnc->Get());
	frc::SmartDashboard::PutNumber("lEnc", RobotMap::drivelEnc->Get());
	Robot::drive->setPID(frc::SmartDashboard::GetNumber("Speed_P", 0),
						 frc::SmartDashboard::GetNumber("Speed_I", 0),
						 frc::SmartDashboard::GetNumber("Speed_D", 0));
}

// Make this return true when this Command no longer needs to run execute()
bool JoystickDrive::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void JoystickDrive::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void JoystickDrive::Interrupted() {

}
